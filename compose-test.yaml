services:
  # PostgreSQL database for testing
  postgres-test:
    image: postgres:14
    container_name: cartograph-postgres-test
    environment:
      POSTGRES_DB: cartograph
      POSTGRES_USER: cartograph
      POSTGRES_PASSWORD: myDbPass123#
    ports:
      - "5445:5432"  # Different port to avoid conflicts
    volumes:
      - postgres-test-data:/var/lib/postgresql/data
      - ./db_setup.sql:/docker-entrypoint-initdb.d/db_setup.sql
    networks:
      - cartograph-test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cartograph -d cartograph"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Test runner service - using our custom Go test runner
  test-runner:
    image: golang:1.24-bookworm
    container_name: cartograph-test-runner
    environment:
      DB_HOST: postgres-test
      DB_PORT: 5432
      DB_NAME: cartograph
      DB_USER: cartograph
      DB_PASS: myDbPass123#
      CGO_ENABLED: 0
    working_dir: /workspace
    volumes:
      - .:/workspace
    networks:
      - cartograph-test-network
    depends_on:
      postgres-test:
        condition: service_healthy
    command: >
      sh -c "
        go mod download &&
        go run ./cmd/cartograph-test/
      "

networks:
  cartograph-test-network:
    driver: bridge

volumes:
  postgres-test-data: 